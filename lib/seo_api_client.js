// Generated by CoffeeScript 1.5.0
(function() {
  var ApiClient, SeoApiClient, VersionedApiClient,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ApiClient = require('./api_client');

  VersionedApiClient = require('./versioned_api_client');

  SeoApiClient = (function(_super) {

    __extends(SeoApiClient, _super);

    function SeoApiClient() {
      SeoApiClient.__super__.constructor.apply(this, arguments);
    }

    ApiClient.types['SeoApiClient'] = SeoApiClient;

    SeoApiClient.prototype.api_path = function() {
      var path;
      path = SeoApiClient.__super__.api_path.apply(this, arguments);
      path = "" + path + "/" + this.endpoint_path;
      if (this.seo_geo_slug != null) {
        path = "" + path + "/" + this.channel + "/" + this.seo_geo_slug;
        if (this.category != null) {
          return path += "/" + this.category;
        }
      } else {
        return path = "" + path + "/" + this.latitude + "/" + this.longitude;
      }
    };

    SeoApiClient.prototype.pages = function(options, headers, cb) {
      var query;
      if (cb == null) {
        cb = void 0;
      }
      query = {};
      this.endpoint_path = 'pages';
      if (options.seo_geo_slug != null) {
        this.channel = options.channel || 'local';
        this.seo_geo_slug = options.seo_geo_slug;
        this.category = options.category;
      } else {
        this.latitude = options.lat;
        this.longitude = options.lng;
        if (options.category) {
          query.category = options.category;
        }
      }
      return this.get(query, headers, cb);
    };

    return SeoApiClient;

  })(VersionedApiClient);

  module.exports = SeoApiClient;

}).call(this);
